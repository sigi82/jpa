1. 로컬저장소 만들기
 1) 디렉토리에 생성(D:\DEV\Git\iTshirt-cat)
 2) 생성된 디랙토리에서 Git Bash 실행
 3) git 초기화
   $ git init

2. 첫번째 커밋 만들기   
 1) 내 정보 등록
   $ git config --global user.email "hello.git.GitHub@gmail.com"
   $ git config --global user.name "Cat-Hanbit"
 2) 커밋할 파일 추가
   $ git add README.txt
 3) 커밋
   $ git commit -m "사이트 설명 추가"
   
3. 다른 커밋으로 되돌리기
 1) 커밋 내역 보기
   $ git log
	commit e237d07e30a2b85f5367a15c6f6d59be6be94bba (HEAD -> master)
	Author: Cat-Hanbit <hello.git.GitHub@gmail.com>
	Date:   Sat Jan 8 14:18:46 2022 +0900

		설명 업데이트

	commit a62b63b3339a0772438099de5ccfddf67aa76bed
	Author: Cat-Hanbit <hello.git.GitHub@gmail.com>
	Date:   Sat Jan 8 14:18:07 2022 +0900
		사이트 설명 추가
	
 2) 다른 커밋으로 되돌리기
   $ git checkout a62b63b3339a0772438099de5ccfddf67aa76bed
 3) 최신 커밋으로 되돌리기 
   $ git checkout -
   
4. 원격저장소(GitHub)에 커밋 올리기   
 1) GitHub에 Repository 생성(iTshirt)
 2) Repository 주소 복사 후 연결
   $ git remote add origin https://github.com/sigi82/iTshirt.git
 3) 로컬저장소에 있는 커밋을 원격저장소에 올리기
   $ git push origin master
   
5. 원격저장소(GitHub)의 커밋을 로컬저장소에 내려받기
 1) 디렉토리에 생성(D:\DEV\Git\iTshirt-oct) 
 2) 생성된 디랙토리에서 Git Bash 실행   
 3) 원격저장소의 커밋을 로컬저장소에 내려받기
   $ git clone https://github.com/sigi82/iTshirt.git .
 4) 파일 수정 후 커밋할 파일 추가
   $ git add README.txt
 5) 파일 커밋
   $ git commit -m "개발자 목록 추가"
 6) 원격저장소에 푸시
   $ git push origin master

6. 원격저장소의 새로운 커밋을 로컬저장소에 갱신하기
 1) iTshirt-cat 디랙토리에서 Git Bash 실행
 2) 원격저장소의 새로운 커밋을 로컬저장소에 갱신
   $ git pull origin master
    
7. SVN과 GIT의 차이점
: Git은 커밋에 바뀐 것만 저장하는 것이 아니라 전체 코드를 저장한다. 얼핏 보면 전체를 저장하는 Git보다 차이점만 저장하는 SVN이 훨씬 용량도 작고 빠를 것 같다.
하지만 조금만 더 생각해 보면 차이점만 저장하는 방식은 버전을 보여줄 때 파일이 만들어 졌던 맨 처음까지 거슬러 올라가며 바뀐 점을 모두 반영하는 계산을 해야 한다.
Git은 파일의 스냅샷을 저장하므로 계산이 필요 없다. 그리고 바뀌지 않은 파일은 이전 파일의 링크만 저장하기 때문에 용량도 적고 계산도 하지 않아도 된다.

